[
    {
        "id": "8000e63e3e50e244",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "410162a5845bdc16",
        "type": "tab",
        "label": "HTTP Requests and UI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7e836418240fbe70",
        "type": "tab",
        "label": "MQTT and rpi",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d5c80436ce9ee8f3",
        "type": "mqtt-broker",
        "name": "MQTT rpi",
        "broker": "192.168.1.34",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "ff3ae1fb2f5e719e",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "e34c3fe0579bc005",
        "type": "ui_tab",
        "name": "MQTT",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fc7005a802729bba",
        "type": "ui_group",
        "name": "testTopic",
        "tab": "e34c3fe0579bc005",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "012779a207f18722",
        "type": "ui_tab",
        "name": "Earthquake",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b09c3ec616baebd2",
        "type": "ui_group",
        "name": "All",
        "tab": "012779a207f18722",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "beade1ccda3e153d",
        "type": "ui_group",
        "name": "Panic",
        "tab": "012779a207f18722",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "71dc3ff87ac8a384",
        "type": "ui_group",
        "name": "Not panic",
        "tab": "012779a207f18722",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f189fe5fed599cde",
        "type": "ui_group",
        "name": "nodeTopic",
        "tab": "e34c3fe0579bc005",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "667e5de05ce6b89b",
        "type": "inject",
        "z": "8000e63e3e50e244",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 60,
        "wires": [
            [
                "eefc8c1469865eca"
            ]
        ]
    },
    {
        "id": "a6ad3c1f1cf21ec0",
        "type": "debug",
        "z": "8000e63e3e50e244",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "eefc8c1469865eca",
        "type": "function",
        "z": "8000e63e3e50e244",
        "name": "getLocaleString",
        "func": "msg.payload = new Date(msg.payload).toLocaleString()\nreturn msg\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 60,
        "wires": [
            [
                "a6ad3c1f1cf21ec0"
            ]
        ]
    },
    {
        "id": "47928f14f2dde6bc",
        "type": "inject",
        "z": "8000e63e3e50e244",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "4b7bbc2d8b56df83",
                "eefc8c1469865eca"
            ]
        ]
    },
    {
        "id": "4b7bbc2d8b56df83",
        "type": "function",
        "z": "8000e63e3e50e244",
        "name": "getDay",
        "func": "msg.payload = new Date(msg.payload).getDay()\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 200,
        "wires": [
            [
                "d3ecd74a752498ab"
            ]
        ]
    },
    {
        "id": "d3ecd74a752498ab",
        "type": "debug",
        "z": "8000e63e3e50e244",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 200,
        "wires": [],
        "inputLabels": [
            "date"
        ]
    },
    {
        "id": "c2b577792d3c5c50",
        "type": "http request",
        "z": "410162a5845bdc16",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_month.csv",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 350,
        "y": 140,
        "wires": [
            [
                "b1af3e9d698863f5"
            ]
        ]
    },
    {
        "id": "b1af3e9d698863f5",
        "type": "csv",
        "z": "410162a5845bdc16",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "f4c5cb1e47ed293c",
                "a639cf08ad5a3e3e",
                "3f853ae79e25361b"
            ]
        ]
    },
    {
        "id": "c3da0cf5932ef862",
        "type": "comment",
        "z": "410162a5845bdc16",
        "name": "",
        "info": "Este es un comentario\n\n# Hola, Mundo!\n\n```js\nconsole.log('Hola, Mundo!')\n```",
        "x": 140,
        "y": 220,
        "wires": []
    },
    {
        "id": "f4c5cb1e47ed293c",
        "type": "function",
        "z": "410162a5845bdc16",
        "name": "getAll",
        "func": "msg.payload = JSON.stringify(msg.payload, null, 2)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 60,
        "wires": [
            [
                "03a343ab1cc091a7"
            ]
        ]
    },
    {
        "id": "a639cf08ad5a3e3e",
        "type": "function",
        "z": "410162a5845bdc16",
        "name": "getPanic",
        "func": "const panic = msg.payload.filter(({mag}) => mag > 5)\nmsg.payload = JSON.stringify(panic, null, 2)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 140,
        "wires": [
            [
                "f9f3959471e8f893"
            ]
        ]
    },
    {
        "id": "3f853ae79e25361b",
        "type": "function",
        "z": "410162a5845bdc16",
        "name": "getNotPanic",
        "func": "const notPanic = msg.payload.filter(({ mag }) => mag < 5)\nmsg.payload = JSON.stringify(notPanic, null, 2)\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 220,
        "wires": [
            [
                "28ddc3febeeb2b65"
            ]
        ]
    },
    {
        "id": "6654b60c7c7a5d9b",
        "type": "inject",
        "z": "410162a5845bdc16",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "c2b577792d3c5c50"
            ]
        ]
    },
    {
        "id": "f4257283de58a378",
        "type": "debug",
        "z": "410162a5845bdc16",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 60,
        "wires": []
    },
    {
        "id": "4ac5914f6e53180d",
        "type": "debug",
        "z": "410162a5845bdc16",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 140,
        "wires": []
    },
    {
        "id": "1d3f9f55c086b12c",
        "type": "debug",
        "z": "410162a5845bdc16",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 220,
        "wires": []
    },
    {
        "id": "03a343ab1cc091a7",
        "type": "ui_template",
        "z": "410162a5845bdc16",
        "group": "b09c3ec616baebd2",
        "name": "All",
        "order": 1,
        "width": "8",
        "height": "12",
        "format": "<pre ng-bind-html=\"msg.payload\"></pre>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 930,
        "y": 60,
        "wires": [
            [
                "f4257283de58a378"
            ]
        ]
    },
    {
        "id": "f9f3959471e8f893",
        "type": "ui_template",
        "z": "410162a5845bdc16",
        "group": "beade1ccda3e153d",
        "name": "Panic",
        "order": 1,
        "width": "8",
        "height": "12",
        "format": "<pre ng-bind-html=\"msg.payload\"></pre>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 930,
        "y": 140,
        "wires": [
            [
                "4ac5914f6e53180d"
            ]
        ]
    },
    {
        "id": "28ddc3febeeb2b65",
        "type": "ui_template",
        "z": "410162a5845bdc16",
        "group": "71dc3ff87ac8a384",
        "name": "Not Panic",
        "order": 1,
        "width": "8",
        "height": "12",
        "format": "<pre ng-bind-html=\"msg.payload\"></pre>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 940,
        "y": 220,
        "wires": [
            [
                "1d3f9f55c086b12c"
            ]
        ]
    },
    {
        "id": "ad783d3137fca54b",
        "type": "mqtt in",
        "z": "7e836418240fbe70",
        "name": "testTopic",
        "topic": "testTopic",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d5c80436ce9ee8f3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 60,
        "wires": [
            [
                "feb83f3630f38827"
            ]
        ]
    },
    {
        "id": "feb83f3630f38827",
        "type": "function",
        "z": "7e836418240fbe70",
        "name": "function 1",
        "func": "const messages = flow.get('testTopicMessages')\nmsg.payload = [...messages, msg.payload]\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set('testTopicMessages', ['first'])\n",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 60,
        "wires": [
            [
                "8e3b50c5fb8a4761"
            ]
        ]
    },
    {
        "id": "8e3b50c5fb8a4761",
        "type": "change",
        "z": "7e836418240fbe70",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "testTopicMessages",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 60,
        "wires": [
            [
                "5ef123aca96ae681"
            ]
        ]
    },
    {
        "id": "873a040cb64512f2",
        "type": "ui_template",
        "z": "7e836418240fbe70",
        "group": "fc7005a802729bba",
        "name": "",
        "order": 1,
        "width": "8",
        "height": "12",
        "format": "<pre ng-bind-html=\"msg.payload\"></pre>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1060,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5ef123aca96ae681",
        "type": "function",
        "z": "7e836418240fbe70",
        "name": "function 2",
        "func": "msg.payload = JSON.stringify(msg.payload, null, 2)\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 60,
        "wires": [
            [
                "873a040cb64512f2"
            ]
        ]
    },
    {
        "id": "17f17405e3322ad3",
        "type": "mqtt in",
        "z": "7e836418240fbe70",
        "name": "nodeTestTopic",
        "topic": "nodeTestTopic",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d5c80436ce9ee8f3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 160,
        "wires": [
            [
                "8129473b8dbc4b54"
            ]
        ]
    },
    {
        "id": "8129473b8dbc4b54",
        "type": "function",
        "z": "7e836418240fbe70",
        "name": "function 3",
        "func": "const messages = flow.get('nodeMessages')\nmsg.payload = [...messages, msg.payload]\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nflow.set('nodeMessages', ['first'])\n",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 160,
        "wires": [
            [
                "fca08e3236da5346"
            ]
        ]
    },
    {
        "id": "fca08e3236da5346",
        "type": "change",
        "z": "7e836418240fbe70",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "nodeMessages",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 160,
        "wires": [
            [
                "034d7ba016542182"
            ]
        ]
    },
    {
        "id": "f3cdeebcc51cba9e",
        "type": "ui_template",
        "z": "7e836418240fbe70",
        "group": "f189fe5fed599cde",
        "name": "",
        "order": 1,
        "width": "8",
        "height": "12",
        "format": "<pre ng-bind-html=\"msg.payload\"></pre>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1060,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "034d7ba016542182",
        "type": "function",
        "z": "7e836418240fbe70",
        "name": "function 4",
        "func": "msg.payload = JSON.stringify(msg.payload, null, 2)\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 160,
        "wires": [
            [
                "f3cdeebcc51cba9e"
            ]
        ]
    },
    {
        "id": "f76216d7afc1dabf",
        "type": "comment",
        "z": "7e836418240fbe70",
        "name": "",
        "info": "Para que funcione tiene que estar levantado el broker mqtt en la Raspberry Pi.\n\nPara enviar un mensaje ejecutar el siguiente comando desde la rpi:\n```\nmosquitto_pub -d -t testTopic -m \"Mensaje\" -u nwtpi -P mosquitto123\n```\n\nPara suscribirse a un mensaje ejecutar el siguiente comando:\n```\nmosquitto_sub -d -t testTopic -u nwtpi -P mosquitto123\n```\n",
        "x": 140,
        "y": 260,
        "wires": []
    }
]